Задача
Вам нужно разработать приложение React для отображения таблицы с данными. Дополнительным преимуществом является то, что окончательная сборка приложения должна выполняться из контейнера Docker (по крайней мере, с минимальной конфигурацией)

Функциональная

Сортировка столбцов: при щелчке по имени столбца строки таблицы сортируются в порядке возрастания, а при повторном щелчке-в порядке убывания. Графический элемент или текстовое сообщение указывают направление сортировки.

Разбиение клиента на страницы: данные должны отображаться постранично, не более 50 элементов на странице. Вы должны предоставить пользовательскую навигацию для навигации по страницам.

Фильтрация: компонент предоставляет текстовое поле, в которое пользователь может вводить текст, а строки таблицы, данные которых не содержат введенной пользователем подстроки, скрыты. Повторная фильтрация производится нажатием на кнопку "Найти".

При нажатии на строку таблицы значения полей отображаются в дополнительном блоке под таблицей.

Данные загружаются в таблицу с сервера. Загрузите метод с сервера по вашему выбору.
Маленький объем данных берется по ссылке http://www.filltext.com/?rows=32&id={...|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}

Большой объем данных берется по ссылке http://www.filltext.com/?rows=1000&id...|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}

Замечания

Особое внимание следует уделить скорости работы. Зависание интерфейса при выполнении операций загрузки данных, фильтрации, сортировки недопустимо.
Во время загрузки данных стоит показать какой-то индикатор
Использование сторонних библиотек будет плюсом только в случае если это оправданно и вы сможете объяснить причину выбора. Показав свои знания в грамотном применении сторонних готовых решений, вы имеете шанс повысить свою профессиональную привлекательность для нас.
Пишите код так, как бы вы его писали в работе — внутренности задания будут оцениваться даже тщательней, чем внешнее соответствие заданию. Код должен быть организован так, чтобы его можно было заново использовать.
Помните про обработку ошибок!
Верстка может быть самая простая. Визуализацию и украшение делайте на ваш вкус. Мы не против использования Bootstrap или похожего UI фреймворк, но только для UI представления (нельзя использовать JS код для решения задачи, но можно использовать для оформительских эффектов (анимации и тому подобное))